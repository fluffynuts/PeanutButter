<package>
  <metadata>
    <id>PeanutButter.DuckTyping</id>
    <version>3.0.34</version>
    <title>PeanutButter.DuckTyping</title>
    <authors>Davyd McColl</authors>
    <owners></owners>
    <description>
      A package to facilitate duck-typing through an object extension DuckAs&lt;&gt;.
      There is also a FuzzyDuckAs&lt;&gt; facility for more case-insensitive ducking.
      At no point is there use of DynamicObjects, which hurt performance.
      Property read/write as well as methods are ducked, with the current caveat
      that ref and out parameters may not behave as expected.
    </description>
    <releaseNotes></releaseNotes>
    <summary>
      A package to facilitate duck-typing through object extensions without using
      dynamic objects at all.
    </summary>
    <language>en-US</language>
    <projectUrl>https://github.com/fluffynuts/PeanutButter</projectUrl>
    <repository type="git" url="https://github.com/fluffynuts/PeanutButter" />
    <icon>icon.png</icon>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <license type="expression">BSD-3-Clause</license>
    <copyright>Copyright  2016</copyright>
    <dependencies></dependencies>
    <references></references>
    <tags>duck-typing cross-platform type-emission configuration</tags>
  </metadata>
  <files>
    <file src="icon.png" target="" />
    <file src="bin/Release/net462/PeanutButter.DuckTyping.dll" target="lib/net462" />
    <file src="bin/Release/net462/PeanutButter.DuckTyping.pdb" target="lib/net462" />
    <file src="bin/Release/net462/PeanutButter.DuckTyping.xml" target="lib/net462" />
    <file src="bin/Release/netstandard2.0/PeanutButter.DuckTyping.xml" target="lib/netstandard2.0" />
    <file src="bin/Release/netstandard2.0/PeanutButter.DuckTyping.dll" target="lib/netstandard2.0" />
    <file src="bin/Release/netstandard2.0/PeanutButter.DuckTyping.deps.json" target="lib/netstandard2.0" />
  </files>
</package>