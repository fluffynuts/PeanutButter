<?xml version="1.0"?>
<package >
  <metadata>
    <id>PeanutButter.Reflection</id>
    <version>1.0.105</version>
    <title>PeanutButter.Reflection.NugetPackage</title>
    <authors>Matthew Van Ryn</authors>
    <owners>Davyd McColl</owners>
    <description>
      This is the fluent reflection slice of the PeanutButter mini-suite.
    </description>
    <releaseNotes>
    </releaseNotes>
    <summary>
      A fluent interface for filtering through types from one or more assemblies by using criteria that closely follows C# syntax. Examples of filter criteria include:
      
      * Filter by including/excluding descendants of a class
      * Filter by including/excluding static classes
      * Filter by including/excluding abstract classes
      * Filter by including/excluding classes decorated with a particular custom attribute
      * Filter by including/excluding classes that have a public parameterless constructor.
      * Filter by including/excluding types that are less accessible/more accessible than a given value (private, protected, protected internal, internal, public)
      
    </summary>
    <language>en-US</language>
    <projectUrl>https://github.com/fluffynuts/PeanutButter</projectUrl>
    <iconUrl>https://nuget.org/Content/Images/packageDefaultIcon-50x50.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <licenseUrl>https://github.com/fluffynuts/PeanutButter/blob/master/LICENSE</licenseUrl>
    <copyright>Copyright  2015</copyright>
    <dependencies>
        <group targetFramework="net40">
          <dependency id="log4net" version="1.2.10" />
        </group>
    </dependencies>
    <references></references>
    <tags></tags>
  </metadata>
  <files>
    <file src="lib\" target="lib" />
    <file src="tools\" target="tools" />
    <file src="content\" target="content" />
  </files>
</package>